<script>

    window.onload = function () {
        GetStudentInProgress();
    };


    const GetStudentInProgress = (event) => {
        console.log("*************>>GetStudentInProgress");
        // Add your code here
        $.ajax({
            url: '/GetStudentInProgress',
            type: 'Get',
            success: function (response) {
                // Handle success response
                console.log("<<<==============");
                console.log("StudentInProgress result:", response);
                console.log("==============>>>");


                if (response.status === "No User In Progress") {
                    document.getElementById("NoUserSelectedInQueue").innerHTML = "No User Selected In Queue. Please select a user from the queue.";
                } else {
                    document.getElementById("NoUserSelectedInQueue").innerHTML = "";
                    RenderSelectedUser(response.userInQueueData);
                }

                GetQueue();


            },
            error: function (error) {
                // Handle error response
                console.log(error);
            }
        });
    };


    const RenderSelectedUser = (userData) => {

        console.log("userData====:", userData);
        const mainElement = document.createElement("main");
        mainElement.id = "SlectedUserInfo";

        const labelUserId = document.createElement("label");
        labelUserId.innerHTML = userData.userId;
        labelUserId.id = "labelUserIdRecord"; // Add unique id
        mainElement.appendChild(labelUserId);

        const userNameDiv = document.createElement("div");
        userNameDiv.id = "userNameDivRecord";

        const lablelFristName = document.createElement("label");
        lablelFristName.innerHTML = userData.firstName;
        lablelFristName.id = "lablelFristNameRecord"; // Add unique id
        userNameDiv.appendChild(lablelFristName);

        const labelLastName = document.createElement("label");
        labelLastName.innerHTML = userData.lastName;
        labelLastName.id = "labelLastNameRecord"; // Add unique id
        userNameDiv.appendChild(labelLastName);

        mainElement.appendChild(userNameDiv);

        const labelStudentId = document.createElement("label");
        labelStudentId.innerHTML = userData.studentId;
        labelStudentId.id = "labelStudentIdRecord"; // Add unique id
        mainElement.appendChild(labelStudentId);

        const labelSchool = document.createElement("label");
        labelSchool.innerHTML = userData.school;
        labelSchool.id = "labelSchoolRecord"; // Add unique id
        mainElement.appendChild(labelSchool);

        const labelSchoolId = document.createElement("label");
        labelSchoolId.innerHTML = userData.schoolId;
        labelSchoolId.id = "labelSchoolIdRecord"; // Add unique id
        mainElement.appendChild(labelSchoolId);

        document.getElementById("SubmitRecordsView").appendChild(mainElement);

    };

    const RenderStudentUploadedFiles = (uploadData) => {
        console.log("RenderStudentUploadedFiles called");
        console.log("uploadData:", uploadData);
        const UserUploadDiv = document.getElementById("UserUploadDiv");


        //IF length of uploadData is 0 than render message to the user that no files uploaded by the student
        if (uploadData.length === 0) {
            const NoFilesUploadedLabel = document.createElement("label");
            NoFilesUploadedLabel.innerHTML = "No files uploaded by the student.";
            UserUploadDiv.appendChild(NoFilesUploadedLabel);
            return;
        }



        uploadData.forEach((item) => {
            const FileName = item.fileName;
            console.log("FileName:", FileName);

            //create a img element and set the src to the file name
            const imgElement = document.createElement("img");
            imgElement.src = "/img/uploads/" + FileName;
            imgElement.className = "UserUpload-Image";
            UserUploadDiv.appendChild(imgElement);



        });

    };

    const GetUserUploads = (UserId) => {
        console.log("==================>UserId to get upload from the student:", UserId);

        console.log("GetUserUploads called");
        console.log("UserId:", UserId);
        const userUploadDiv = document.createElement("div");
        userUploadDiv.id = "UserUploadDiv";
        userUploadDiv.className = "UserUpload-Container";
        document.getElementById("EvaluatorWindow").appendChild(userUploadDiv);

        const EvaluatorWindow = document.getElementById("EvaluatorWindow");
        EvaluatorWindow.style.gridTemplateColumns = "1fr 2fr";

        jsonData = {
            UserId: UserId
        };

        console.log("jsonData:", jsonData);
        // Add your code here
        $.ajax({
            url: '/GetUserUploads',
            type: 'Post',
            data: jsonData,
            success: function (response) {
                // Handle success response
                console.log("GetUserUploads:", response);
                console.log("GetUserUploads:", response.uploadData);
                RenderStudentUploadedFiles(response.uploadData);

            },
            error: function (error) {
                // Handle error response
                console.log(error);
            }
        });
    };



    const ReturnToQueueHandler = (event) => {
        console.log("ReturnToQueueHandler called");
        // Add your code here
        $.ajax({
            url: '/ReturnQueueStatus',
            type: 'Post',
            success: function (response) {
                // Handle success response
                console.log("Return to Queue:", response);
                GetQueue();
                const selectedUserInfo = document.getElementById("SlectedUserInfo");
                selectedUserInfo.parentNode.removeChild(selectedUserInfo);

            },
            error: function (error) {
                // Handle error response
                console.log(error);
            }
        });
    };


    const EvaluatorWindowHandler = (event) => {
        console.log("EvaluatorWindowHandler called");
        console.log("event.target:", event.target);
        // get element by class name and change dislpay to none
        const evaluatorWindow = document.getElementById("EvaluatorWindow");
        // clear element
        evaluatorWindow.parentNode.removeChild(evaluatorWindow);

    };



    //This is the function when a user selects the complicnace list button  
    const ComplianceSelectedHandeler = (event) => {

        //clear selected compliance record
        console.log("ComplianceSelectedHandeler called");
        console.log("event.target:", event.target);

        const UserId = document.getElementById("labelUserIdRecord").innerHTML;


        GetUserUploads(UserId);


        const ComplianceList = document.getElementById("ComplianceList");
        ComplianceList.style.display = "none";

        const ContollerLabel = document.getElementById("ContollerLabel");
        ContollerLabel.innerHTML = "< Back";

        const complianceSelected = event.target.innerHTML;
        const UserSelectedcomplianceDiv = document.createElement("div"); // Create a div element
        UserSelectedcomplianceDiv.id = "UserSelectedComplianceDiv"; // Add unique id
        UserSelectedcomplianceDiv.className = "UserSelectedCompliance-Container"; // Add a class name to the div element

        const complianceSelectedLabelRecord = document.createElement("label");
        complianceSelectedLabelRecord.innerHTML = complianceSelected;
        complianceSelectedLabelRecord.id = "ComplianceSelectedLabelRecord"; // Add unique id
        UserSelectedcomplianceDiv.appendChild(complianceSelectedLabelRecord); // Append the label to the div

        document.getElementById("EvaluatorController").appendChild(UserSelectedcomplianceDiv); // Append the div to the EvaluatorController element


        const PassedButton = document.createElement("button");
        PassedButton.innerHTML = "Passed";
        document.getElementById("UserSelectedComplianceDiv").appendChild(PassedButton);

        const FailedButton = document.createElement("button");
        FailedButton.innerHTML = "Failed";
        document.getElementById("UserSelectedComplianceDiv").appendChild(FailedButton);

        const PendingButton = document.createElement("button");
        PendingButton.innerHTML = "Pending";
        document.getElementById("UserSelectedComplianceDiv").appendChild(PendingButton);









    };

    const ControllerNavHandler = (event) => {
        if (event.target.innerHTML === "Select Compliance") {
            console.log("No need to do anything.");
            return;
        }
        console.log("ControllerNavHandler called");

        const ComplianceList = document.getElementById("ComplianceList");
        ComplianceList.style.display = "grid";

        const ContollerLabel = document.getElementById("ContollerLabel");
        ContollerLabel.innerHTML = "Select Compliance";

        const ComplianceSelectedLabelRecord = document.getElementById("ComplianceSelectedLabelRecord");
        if (ComplianceSelectedLabelRecord) {
            ComplianceSelectedLabelRecord.parentNode.removeChild(ComplianceSelectedLabelRecord);
        }


        document.getElementById("UserSelectedComplianceDiv").remove();
        const EvaluatorWindow = document.getElementById("EvaluatorWindow");
        EvaluatorWindow.style.gridTemplateColumns = "1fr";

        const UserUploadDiv = document.getElementById("UserUploadDiv");
        UserUploadDiv.remove();


    };

    const RenderCompliance = (complianceData) => {
        console.log("RenderCompliance called");
        console.log("complianceData:", complianceData);

        const divElement = document.createElement("div"); // Create a div element
        divElement.className = "Evaluator-Container"; // Add a class name to the div element
        divElement.id = "EvaluatorWindow";
        divElement.addEventListener("click", function (event) {
            console.log("Check event.target:", event.target);
            if (event.target === divElement) {
                EvaluatorWindowHandler(event);
            }
        });

        const aside = document.createElement("aside");
        aside.className = "Evaluator-Controller";
        aside.id = "EvaluatorController";

        const label = document.createElement("label");
        label.innerHTML = "Select Compliance";
        label.id = "ContollerLabel";
        label.addEventListener("click", ControllerNavHandler);
        aside.appendChild(label);

        const ulElement = document.createElement("ul");
        ulElement.id = "ComplianceList";

        complianceData.forEach((item) => {
            console.log("item:", item.name);
            const liElement = document.createElement("li");
            const buttonElement = document.createElement("button");
            buttonElement.innerHTML = item.name;
            buttonElement.addEventListener("click", ComplianceSelectedHandeler)
            liElement.appendChild(buttonElement);
            ulElement.appendChild(liElement);
        });

        aside.appendChild(ulElement);

        divElement.appendChild(aside); // Append the aside element to the div element

        document.getElementById("SubmitRecordsView").appendChild(divElement); // Append the div element to the SubmitRecordsView element
    };


    const RenderSchoolComplianceHandler = (event) => {
        console.log("RenderSchoolComplianceHandler called");

        // You need the school id to filter the compliance data
        let schoolIdFilter = document.getElementById("labelSchoolIdRecord").textContent;

        jsonData = {
            idFromSchool: schoolIdFilter
        };

        console.log("jsonData:", jsonData);
        // Add your code here
        $.ajax({
            url: '/RenderSchoolCompliance',
            type: 'Post',
            data: jsonData,
            success: function (response) {
                // Handle success response
                console.log("RenderCompliance:", response);
                RenderCompliance(response.complianceData);
            },
            error: function (error) {
                // Handle error response
                console.log(error);
            }
        });
    };







</script>


<div class="SubmitRecords-Container" id="SubmitRecordsView">
    <button id="ReturnToQueueBTN" onclick="ReturnToQueueHandler(event)">Return to Queue</button>
    <button onclick="RenderSchoolComplianceHandler(event)">+</button>
    <label id="NoUserSelectedInQueue"></label>
    <button onclick="RecordHandler(event)">Cretae Record DB</button>





</div>